import sys

print("#ifndef UNICODE_CODE_POINTS_HPP_INCLUDED")
print("#define UNICODE_CODE_POINTS_HPP_INCLUDED")
print("")
print(" // NOTE: File generated by massage_unicode_data.py - do not edit")
print("")
print("#include <map>")
print("#include <cstdint>")
print("")
print("struct code_point {")
print("    uint32_t numeric_value;")
print("    char const* name;")
print("    bool bidi_mirrored;")
print("    uint32_t simple_uppercase_mapping;")
print("    uint32_t simple_lowercase_mapping;")
print("    uint32_t simple_titlecase_mapping;")
print("};")
print("")
print("std::map<uint32_t, code_point> unicode_code_points = {")

for line in open("UnicodeData.txt"):
	parts = line.split(';')
	numeric_value = int(parts[0], 16)

	name = parts[1]
	bidi_mirrored = 'true' if parts[9] == 'Y' else 'false'
	simple_uppercase_mapping = 0 if parts[12] == '' else int(parts[12], 16)
	simple_lowercase_mapping = 0 if parts[13] == '' else int(parts[13], 16)
	simple_titlecase_mapping = simple_uppercase_mapping if parts[14] == '\n' else int(parts[14], 16)

	print(' { ' + str(numeric_value) + ', { ' + str(numeric_value) + ', "' + name + '", ' + bidi_mirrored  + 
			', ' + str(simple_uppercase_mapping) +
			', ' + str(simple_lowercase_mapping) +
			', ' + str(simple_titlecase_mapping) +
			' }},')

print("};")
print("")
print("#endif")

